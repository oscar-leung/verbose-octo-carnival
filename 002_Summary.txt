User
How can I leverage job searching w/ automation? So far, I learned and review Python Selenium. As a recently laid off, I want to automate applying to jobs on LinkedIn via Easy Apply. Can you provide ma high level architecture of what I need and tools to use before I even start coding it? 
ChatGPT
Certainly! Automating job searching and application processes can be a powerful way to streamline your job search. Before diving into coding, it's essential to plan the architecture of your automation system. Here's a high-level overview:

High-Level Architecture:
Job Search Platform: LinkedIn

Choose the job search platform you want to automate. In your case, LinkedIn is the target. Be sure to review and comply with the platform's terms of service to avoid any issues.
Automation Script: Python w/ Selenium

Use Python with Selenium for web automation. Selenium is a powerful tool for interacting with websites, and it can simulate user actions like clicking buttons and filling out forms.
WebDriver: ChromeDriver

Choose a WebDriver compatible with Selenium and your preferred browser (e.g., ChromeDriver for Google Chrome). This will act as an intermediary between your script and the web browser.
Job Listing Data Storage: SQLite

You may want to store job listing data for future reference or analysis. Consider using a database (SQLite, MySQL, etc.) or a simple file system to store details like job title, company, and application status.
Resume and Cover Letter Management: 

If you're using the "Easy Apply" feature, you might need to upload your resume and cover letter. Automate the process of managing these documents. You can use a document management system or a dedicated folder on your computer.
Logging and Monitoring: Logging System

Implement a logging system to keep track of the automation process. This can help you troubleshoot issues and monitor the progress of your job applications.


~2 hours playing w/ LinkedIn Easy Apply and created a https://miro.com/app/board/uXjVNOGrDgA=/?share_link_id=395369068045

~2 hours milestone of getting a list of texts from the 24 job postings 
tools picked up, lightshot, giphycatcher for mac users to take screenshots and gif recordings for quickly documenting learnings and demos

Blocker
after working ~ 2 more hrs came across security verification check after logining too many times
https://prnt.sc/DCpPwQ8rs3Db
as I was navigating the application process for the easy apply

11/16/23 ~ 1 hr I just found that I can workaround this since I have wait until element are presence and I just need to manually login and verify
that way i can still proceed with the easy apply automation. 

11/16/23 ~1 hr Just tried again around 10pm and I no longer need to verify anymore
I also learned using try catch statement is very useful in just error handling and continuing w/ the script as I'm able to run throught the whole thing continiously and catching errors that I can fix on the spot which is pretty
I will make note of that when writing test scripts, to always use try-catch exception statements as they is super helpful in moving forward the scripts

11/17/23 ~ 2hrs https://prnt.sc/oSsjmGtdf6Pd reach a good milstone where I was able go through all 24 job posting and apply to those that easy apply and it took 13 minutes! 
The try exception handled alot of errors. I think the additonal questions page w/ inputs of job expereince needs to be manually inputted every times
since idk the questions directly and it's different everytime. And there was exceptional pages within the job application which is uncommon but workaroundable.
For my next task, I want to keep looping for the next page and continue.

~ 5 hrs I notice that the Easy Apply button turns clickable after a certain amount of time. That's subtle way to prevent buttons
For additonal question page, it's hard to find balance to find what need to automated since there's always different questions and I need to manually input those and wait for rest script to move forward
I was able to scrap off text from the additional questions
Learned what pass is during script development as placeholder for functions

it's 7:18pm pst, it's a good thing to know a reset state or go back to state to fix itself
10:52pm - I learned that appending 
&f_AL=true&origin=JOB_SEARCH_PAGE_JOB_FILTER
to 
https://www.linkedin.com/jobs/collections/recommended/?currentJobId=3756056091&f_AL=true&origin=JOB_SEARCH_PAGE_JOB_FILTER
makes the recommended job list into all easy apply. Which would prove to be useful if I want all easy apply only.

11/18/23 ~4 hrs working on this
9:58 I would like to scrap the additional questions to reuse and input.
10:32am I was able to implement the modal https://prnt.sc/1bNqkzYj_q9l to ensure the modal shows up when I click on easy apply
11:55am Ensure I have reliable wifi otherwise, web elements will be at different speed
So far, in the navigation process, there are different flows that I need to account and one things is the next, review, and submit buttons
those take me to different flows and I don't necessary want to go throught every page, so I'm currenly settings flags for review and submit buttons https://prnt.sc/KhoBPes_godW
12:21pm Implement https://prnt.sc/C0YfLPL8xn3W where I can skipped over pages as needed
5:28 pm I've added an additional variable ensure I am on the right page. Now it's iterating and skipping timeout executions to reduce the time 
6:13pm there's diveristy page and additonal page from to factor in
10:32 pm https://www.linkedin.com/jobs/collections/recommended/?currentJobId=3762340359 has the education and work experience pages to work with  
11:26 pm came across a job posting in spanish, which was edge case and good to know in the future